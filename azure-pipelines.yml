# Xamarin.Android
# Build a Xamarin.Android project.
# Add steps that test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin
#
#
# midified from: https://medium.com/@yanxiaodi/using-azure-devops-build-pipeline-for-xamarin-forms-436ddc6bcf97
# removed from msBuildArgs /p:UapAppxPackageBuildMode=StoreUpload'
#

trigger:
- master
 
jobs:
- job: Android
  pool:
    vmImage: 'macOS-10.13'
  variables:
    buildConfiguration: 'Release'
    outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'
  steps:
  - task: NuGetToolInstaller@0
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'
  - task: XamarinAndroid@1
    inputs:
      projectFile: '**/*droid*.csproj'
      outputDirectory: '$(outputDirectory)'
      configuration: '$(buildConfiguration)'

- job: iOS
  pool:
    vmImage: 'macOS-10.13'
  variables:
    buildConfiguration: 'Release'
  steps:
  - task: NuGetToolInstaller@0
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'
  - task: XamariniOS@2
    inputs:
      solutionFile: '**/*.sln'
      configuration: '$(buildConfiguration)'
      buildForSimulator: true
      packageApp: false

- job: mac
  pool:
    vmImage: 'macos-10.13'
  variables:
    buildConfiguration: 'Release'
    outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'
  steps:
    - task: NuGetToolInstaller@0
    - bash: |
       # building xamarin.Mac via bash sinc there are noe tasks for it
       sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 5_4_1 
      displayName: 'Select Xamarin SDK version'
      enabled: true

      

- job: WUP
  pool:
    vmImage: 'windows-2019'
  variables:
    solution: '**/*.sln'
    buildPlatform: 'x86|x64|ARM'
    buildConfiguration: 'Release'
    appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\'
  steps:
  - task: NuGetToolInstaller@0
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'
  - task: VSBuild@1
    inputs:
      platform: 'x86'
      solution: '$(solution)'
      configuration: '$(buildConfiguration)'
      msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always'